name: ts

on:
  pull_request:
    paths:
      - src/**
      - tests/**
      - '*.json'
      - '*.yaml'
      - .github/workflows/ts.yaml
  push:
    branches:
      - main
    paths:
      - src/**
      - tests/**
      - '*.json'
      - '*.yaml'
      - .github/workflows/ts.yaml

jobs:
  test:
    strategy:
      matrix:
        shard-id: [1, 2]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      actions: read
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: 20
      - run: npm install -g pnpm@latest-10
      - run: pnpm i
      - run: pnpm build
      - name: Run int128/parallel-test-action
        id: parallel-test
        uses: ./
        with:
          test-files: 'tests/**/*.test.ts'
          test-report-branch: ${{ github.event.pull_request.head.ref || github.ref_name }}
          test-report-artifact-name-prefix: test-report-
          shard-count: 2
      - run: cat "$SHARD_FILE"
        env:
          SHARD_FILE: ${{ steps.parallel-test.outputs.shards-directory }}/${{ matrix.shard-id }}
      - run: pnpm run test
      - uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: test-report-${{ matrix.shard-id }}
          path: junit.xml

  generate:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: 20
      - run: npm install -g pnpm@latest-10
      - run: pnpm i
      - run: pnpm lint --fix
      - run: pnpm format
      - uses: int128/update-generated-files-action@65b9a7ae3ededc5679d78343f58fbebcf1ebd785 # v2.57.0
